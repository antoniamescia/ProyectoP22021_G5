using System;

namespace BankerBot
{
    public class AddExpenseCategoryHandler : AbstractHandler<IMessage>
    {
        /// <summary>
        /// Handler que se encargar√° de agregar nuevas categor√≠as de gasto.
        /// </summary>
        /// <param name="condition"></param>
        /// <returns></returns>
        
        /*
        Cumple con SRP porque solo se identifica una raz√≥n de cambio: alg√∫n cambio en la l√≥gica del m√©todo HandleRequest.
        Cumple con Expert porque tiene toda la informaci√≥n necesaria para poder cumplir con la responsabilidad otorgada.
        Cumple con Polymorphism porque usa el m√©todo polim√≥rfico handleRequest.
        Cumple con el patr√≥n Chain of Responsibility.
        */

        public AddExpenseCategoryHandler(AddExpenseCategoryCondition condition) : base(condition)
        {
        }

        protected override void handleRequest(IMessage request)
        {
            UserInfo data = Session.Instance.GetChatInfo(request.UserID);

            if (request.MessageText != string.Empty)
            {
                if (!data.User.ContainsExpenseCategory(request.MessageText))
                {
                    data.User.AddExpenseCategory(request.MessageText);
                    data.ComunicationChannel.SendMessage(request.UserID, "¬°Se ha agregado una nueva categor√≠a de gasto con √©xito! üôå");
                    data.ClearOperation();
                }
                else
                {
                    data.ComunicationChannel.SendMessage(request.UserID, "¬°Atenci√≥n! Ya existe una categor√≠a de gasto con este nombre.");
                    data.ComunicationChannel.SendMessage(request.UserID, "Ingrese una nueva categor√≠a de gasto: üí∏");
                }
            }
            else
            {
                data.ComunicationChannel.SendMessage(request.UserID, "Debes ingresar una nueva categor√≠a de gasto.");
                data.ComunicationChannel.SendMessage(request.UserID, "Ingrese una nueva categor√≠a de gasto: üí∏");
            }
        }
    }
}